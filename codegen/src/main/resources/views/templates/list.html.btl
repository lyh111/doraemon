<!DOCTYPE html>
<html>

<head>
    \<% include('../include/head.html'){} %>
    <link href="\${ctxStatic}/h/css/plugins/bootstrap-table/bootstrap-table.min.css?v=4.0.0" rel="stylesheet">
</head>
<body>
<table id="dataGrid"></table>

\<% include('../include/footer.html'){} %>
<script src="\${ctxStatic}/h/js/plugins/bootstrap-table/bootstrap-table.min.js"></script>

<script>
    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#dataGrid').bootstrapTable({
                url: '\${ctxAdmin}/${package.ModuleName}/${strutil.uncap(table.entityName)}/findList', //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                async:  true,                        //true表示执行到这,ajax向后台发起访问,在等待响应的这段时间里,继续执行下面的代码
                                                     //设置为true,基本都是后面的代码(除非还有ajax)先执行
                // toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                paginationPreText:'<',              //上一页按钮样式
                paginationNextText:'>',             //下一页按钮样式
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 1,                       //每页的记录行数（*）
                pageList: [1,10, 25, 50, 100],        //可供选择的每页的行数（*）
                contentType: "application/x-www-form-urlencoded",   //重要选项,必填
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 1,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                //height: 700,                        //行高，如果没有设置height属性，表格自动根据记录条数决定表格高度,最好不要设置这个属性
                uniqueId: "no",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表
                columns: [
                    {
                        field: 'testId',
                        title: 'ID',
                        editable: {
                            mode: 'inline'
                        }
                    }, {
                        field: 'testName',
                        title: '用户名'
                    }, {
                        field: 'testPassword',
                        title: '密码'
                    }
                ],
                formatLoadingMessage: function () {
                    return '正在努力地加载数据中，请稍候……';
                },
                formatRecordsPerPage: function (pageNumber) {
                    return '每页显示 ' + pageNumber + ' 条记录';
                },
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return '显示第 ' + pageFrom + ' 到第 ' + pageTo + ' 条记录，总共 ' + totalRows + ' 条记录';
                },
                rowStyle: function (row, index) {
                    var classesArr = ['success', 'info'];
                    var strclass = "";
                    if (index % 2 === 0) {//偶数行
                        strclass = classesArr[0];
                    } else {//奇数行
                        strclass = classesArr[1];
                    }
                    return {classes: strclass};
                },//隔行变色
                responseHandler: function(res){
                    console.log(res);
                    if(res.result == 'success'){
                        return {
                            'rows': res.data,
                            'total': 20
                        }
                    }
                }
            });
        };

        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                limit: params.limit,    //params.limit,   页面大小
                offset: params.offset,
                testNum: 445,
                testNum1: 343
            };
            return temp;
        };
        return oTableInit;
    };

    var oTable = new TableInit();
    oTable.Init();
</script>
</body>
</html>